[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "regex-gen"
dynamic = ["version"]
description = "yet another regex based text generation library"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = [
  "regex",
  "regular-expression",
  "string-generation",
  "data-generation",
]
authors = [{ name = "0000matteo0000", email = "matteo.sid@hotmail.it" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]
dependencies = []


[project.optional-dependencies]
testing = ["pytest", "pytest-cov",]
formatting = ["autopep8", "isort",]
dev = ["regex-gen[testing, formatting]",]

[project.urls]
Homepage = "https://github.com/0000matteo0000/regex-gen"
Documentation = "https://github.com/0000matteo0000/regex-gen#readme"
Issues = "https://github.com/0000matteo0000/regex-gen/issues"
Source = "https://github.com/0000matteo0000/regex-gen"

[tool.hatch.version]
path = "src/regex_gen/__about__.py"
[tool.hatch.envs.types]
extra-dependencies = ["mypy>=1.0.0",]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/regex_gen tests}"

[tool.hatch.envs.hatch-test]
dependencies = ["pytest", "pytest-cov"]
[[tool.hatch.envs.hatch-test.matrix]]
python = ["3.10", "3.11", "3.12", "3.13"]
[tool.hatch.envs.hatch-test.scripts]
run = 'python3 -m pytest --full-trace "."'
run-cov = 'COVERAGE_FILE=.coverage_py"$(python3 -c "import platform; print(platform.python_version())")" python3 -m pytest --cov="./src/regex_gen/" --full-trace "."'
cov-combine = "coverage combine"
cov-report = "coverage report"


[tool.coverage.run]
source_pkgs = ["regex_gen", "tests"]
branch = true
parallel = true
omit = ["src/regex_gen/__about__.py"]
[tool.coverage.paths]
regex_gen = ["src/regex_gen", "*/regex-gen/src/regex_gen"]
tests = ["tests", "*/regex-gen/tests"]
[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.ruff]
line-length = 999
indent-width = 4
[tool.ruff.format]
quote-style = "double"